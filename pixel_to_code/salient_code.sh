#!/bin/bash

# Usage : pixel_to_code/salient_code.sh <experiment_name> <number_salient_pixel>
# Takes all the apks' hashes given in the wanted_apk.txt

# 1. Copies corresponding images and apks in pixel_to_code/_original_images and pixel_to_code/_apks
# 2. Makes saliency maps and store them in pixel_to_code/_saliency_images
# 3. Find portions of code correponding to the most salient pixels


if [ -z "$1" ]; then
    echo "Experiment name is required as 1st argument"
    exit 1
fi

# 1.

experiment_name=$1
number_salient_pixels=${2:-3}
file="pixel_to_code/wanted_apks.txt"

echo "Copying .apk and .png corresponding to given hashes..."

total_hashes=$(grep -c '' "$file")
current=0

while IFS= read -r hash || [[ -n "$hash" ]]; do

    ((current++))
    echo -ne "Processing $current of $total_hashes...\r"
    
    path=$(python pixel_to_code/get_img_from_hash.py -apk "$hash")    
    label=$(echo "$path" | grep -oE "(Malware|Goodware)")
    train_or_test=$(echo "$path" | grep -oE "(train|test)")
    
    if [ -n "$path" ] && [ -e "$path" ]; then
    
        mkdir -p "pixel_to_code/_original_images/$experiment_name/$label"
        cp "$path" "pixel_to_code/_original_images/$experiment_name/$label/$(basename "$path")"
        
        mkdir -p "pixel_to_code/_apks/$experiment_name"
        cp "_dataset/sorted_dataset/$train_or_test/$label/$(basename "$path" .png).apk" "pixel_to_code/_apks/$experiment_name/$(basename "$path" .png).apk"
        
    fi
done < "$file"


# 2.

echo "Making saliency maps..."
python -m make_saliency_maps -e "$experiment_name"


# 3.

echo "Searching for salient portions of code..."
python pixel_to_code/find_portion_code.py -e "$experiment_name" -n "$number_salient_pixels"


echo -e "\nCompleted processing for experiment $experiment_name. Results can be found in pixel_to_code/salient_code/$experiment_name/"