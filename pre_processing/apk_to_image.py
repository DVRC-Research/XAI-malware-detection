import os
from PIL import Image
from androguard.core.bytecodes.apk import APK


def get_dex_bytes(apk: APK) -> bytes:
    for f in apk.get_files():
        if f.endswith(".dex"):
            yield apk.get_file(f)

def generate_and_resize_png(apk: APK, filename: str, folder: str, img_size: int):
    stream = bytes()
    for s in get_dex_bytes(apk):
        stream += s
    current_len = len(stream)
    
    # Create an image from the byte stream
    image = Image.frombytes(mode='L', size=(1, current_len), data=stream)
    
    # Resize the image
    resized_image = image.resize((1, img_size * img_size), Image.BILINEAR)
    
    # Save the resized image
    resized_image.save(os.path.join(folder, f"{filename}.png"))

def save_error(log_file, apk_name, error):
    with open(log_file, "a") as file:
        file.write(f"Error with {apk_name}: {error}\n")

if __name__ == "__main__":
    import sys
    if len(sys.argv) < 4:
        raise Exception("[!] Usage: python3 apk_to_image.py APK DESTINATION IMG_SIZE")
    else:
        apk_path = sys.argv[1]
        destination_folder = sys.argv[2]
        img_size = int(sys.argv[3])
        apk_name = os.path.basename(apk_path)
        filename = os.path.splitext(apk_name)[0]
    try:
        apk = APK(apk_path)
        generate_and_resize_png(apk, filename, destination_folder, img_size)
    except Exception as e:
        print("[!] An exception occurred with: {}".format(filename))
        print("Exception: {}".format(e))
        save_error("conversion_errors.txt", filename, e)
